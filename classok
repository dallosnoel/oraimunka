'''
Feladat:
Készíts egy osztályt, amelynek van egy __init__ metódusa (konstruktor),
amely a kutya nevét és életkorát tárolja.
Hozz létre egy metódust display_info() néven, amely kiírja a kutya nevét
és életkorát.
Példányosítsd az osztályt, és hívd meg a metódust.
'''

class Dog:
    def __init__(self, nev, kor):
        self.nev = nev
        self.kor = kor
    def display_info(self):
        print(self.nev, self.kor)
        
        
a = Dog("asd", 5)

print(a.display_info())

'''
2. Feladat: Banki Számla Osztály

Leírás: Hozz létre egy BankAccount nevű osztályt, amely banki
számlákat reprezentál. Az osztály képes legyen befizetést és
pénzfelvételt végrehajtani, valamint a számla 	egyenlegét lekérdezni.
Feladat:
Hozz létre egy osztályt, amely egy balance változót tárol.
Készíts metódusokat:
deposit(amount): hozzáadja az összeget az egyenleghez.
withdraw(amount): levonja az összeget az egyenlegből, ha van
elég pénz a számlán.
get_balance(): visszaadja az aktuális egyenleget.
Példányosítsd az osztályt, és végezz rajta befizetést,
pénzfelvételt, és kérdezd le az egyenleget.

'''

class BankAccount:
    def __init__(self, balance):
        self.balance = balance
    def deposit(self, amount):
        self.balance = self.balance + amount
        return self.balance
    def withdraw(self, amount):
        self.balance = self.balance - amount
        return self.balance
    def get_balance(self):
        return self.balance


x = BankAccount(10000)

print(x.deposit(1))
print(x.withdraw(5))
print(x.get_balance())


'''
3. Feladat: Diák Osztály és Átlag Számítása
Leírás: Készíts egy Student nevű osztályt, amely tárolja a diák
nevét és jegyeit, és legyen képes kiszámolni az átlagukat.
Feladat:
Az osztály tárolja a diák nevét és egy jegyek listáját.
Legyen egy metódus add_grade(grade), amely hozzáad egy jegyet a listához.
Legyen egy metódus get_average(), amely kiszámolja és visszaadja az átlagot.
Példányosíts egy diákot, adj hozzá jegyeket, és számold ki az átlagát.
'''


class Student:
    def __init__(self, nev, jegy):
        self.jegy = []
        self.nev = nev
    def add_grade(self, grade):
        self.jegy.append(grade)
        return self.jegy
    def get_average(self):
        return sum(self.jegy)/len(self.jegy)
        
b = Student("asd", None)

print(b.add_grade(4))
print(b.add_grade(6))
        
print(b.get_average())




















